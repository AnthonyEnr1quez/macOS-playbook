# ~/.zshrc

# set antibody
source <(antibody init)

# autocompletions
autoload -Uz compinit
typeset -i updated_at=$(date +'%j' -r ~/.zcompdump 2>/dev/null || stat -f '%Sm' -t '%j' ~/.zcompdump 2>/dev/null)
if [ $(date +'%j') != $updated_at ]; then
  compinit -i
else
  compinit -C -i
fi

zmodload -i zsh/complist

# load plugins, themes
antibody bundle < ~/.zsh_plugins.txt

# history
HISTFILE=$HOME/.zsh_history
HISTSIZE=100000
SAVEHIST=$HISTSIZE

bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

setopt hist_reduce_blanks # remove superfluous blanks from history items
setopt inc_append_history # save history entries as soon as they are entered
setopt share_history # share history between different instances of the shell

setopt auto_cd # cd by typing directory name if it's not a command
{% if var_file_name == "work" %}
cdpath=($HOME/go/src/mainrepo)
{% endif %}

setopt auto_list # automatically list choices on ambiguous completion
setopt auto_menu # automatically use menu completion
setopt always_to_end # move cursor to end if word had one match

zstyle ':completion:*' menu select # select completions with arrow keys
zstyle ':completion:*' group-name '' # group results by category
zstyle ':completion:::::' completer _expand _complete _ignored _approximate # enable approximate matches for completion

# rebind delete key, will test w/ windows soon
#bindkey '^[[3~' delete-char
#bindkey '^[3;5~' delete-char

eval `gdircolors ~/.dircolors`

# aliases
 # ls
alias ll='ls -l'
alias ls='ls -F -G' 
 # mvn
alias mci='mvn clean install'
alias qi='mvn clean install -DskipTests'
alias mee='mvn eclipse:eclipse -DdownloadSources=true -DdownloadJavadocs=true -Declipse.useProjectReferences=false -U'
alias mec='mvn eclipse:clean'
alias rebuild='mvn clean eclipse:clean; mvn install -DskipTests; mvn eclipse:eclipse'
alias mcs='mvn clean site'
alias mfr='mvn release:prepare -DdryRun=true'
alias mr='mvn release:prepare'
alias mcc='mvn clean compile'
alias mcp='mvn clean package -DskipTests'

 # git
alias gcam='git add . && git commit -m'
alias gs='git status'
alias gp='git push'
alias gpsu='git branch --show-current| xargs git push --set-upstream origin' 
alias gf='git fetch --all'
alias gitpurge='git fetch --all -p; git branch -vv | grep ": gone]" | awk "{ print $1 }" | xargs -n 1 git branch -D'
alias gfu='git fetch upstream && git checkout master && git rebase upstream/master'

 # intellij
alias idea='open -na "IntelliJ IDEA.app" --args "$@"'

# work properties
{% if var_file_name == "work" %}
 # work specific settings here
{% endif %}

#sdks
# TODO, pyenv has to be in config file before boostrap
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init --path)"
fi

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"
export SDKMAN_OFFLINE_MODE=false

export PATH="$HOME/.jenv/bin:$PATH"
eval "$(jenv init -)"
